{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "dist/Disclosure.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPDisclosure",
          "members": [
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event",
                  "description": "The event object"
                }
              ],
              "description": "Handle click events"
            },
            {
              "kind": "field",
              "name": "trigger"
            },
            {
              "kind": "field",
              "name": "content"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-disclosure",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-disclosure",
          "declaration": {
            "name": "LFPDisclosure",
            "module": "dist/Disclosure.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Heading.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPHeading",
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-h",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-h",
          "declaration": {
            "name": "LFPHeading",
            "module": "dist/Heading.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Nixie.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPNixieTube",
          "members": [
            {
              "kind": "field",
              "name": "#_",
              "privacy": "private",
              "static": true
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-nixie-tube",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-nixie-tube",
          "declaration": {
            "name": "LFPNixieTube",
            "module": "dist/Nixie.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Numberinput.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPNumberInput",
          "members": [
            {
              "kind": "method",
              "name": "#createButton",
              "privacy": "private",
              "parameters": [
                {
                  "name": "text"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#clickAndHold",
              "privacy": "private",
              "parameters": [
                {
                  "name": "btnEl"
                },
                {
                  "name": "callback"
                }
              ]
            },
            {
              "kind": "field",
              "name": "input"
            },
            {
              "kind": "field",
              "name": "decrementButton"
            },
            {
              "kind": "field",
              "name": "incrementButton"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-numberinput",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-numberinput",
          "declaration": {
            "name": "LFPNumberInput",
            "module": "dist/Numberinput.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Progressbar.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPProgressbar",
          "members": [
            {
              "kind": "method",
              "name": "#setTextLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rel"
                },
                {
                  "name": "abs"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "parameters": [
                {
                  "name": "value",
                  "description": "The new value for the progressbar.",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "abs",
                  "default": "true",
                  "description": "Specify if the value passed should be handled\nin relation to the progressbar's maximum value or if value is just to be \nadded as is.",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Set a new value for the progressbar. Call this method periodically\nso that the progressbar is updated continuously."
            },
            {
              "kind": "method",
              "name": "update",
              "static": true,
              "parameters": [
                {
                  "name": "id",
                  "description": "The progressbar's unique ID",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "description": "The new value for the progressbar.",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Use this `static` method to update the progressbar's current value.\nAlternatively, use the `setValue` method on the component's instance itself."
            },
            {
              "kind": "field",
              "name": "showValue",
              "type": {
                "text": "boolean"
              },
              "default": "!!this.getAttribute(\"show-value\")"
            },
            {
              "kind": "field",
              "name": "notify",
              "type": {
                "text": "boolean"
              },
              "default": "!!this.getAttribute(\"aria-notify\")"
            },
            {
              "kind": "field",
              "name": "min"
            },
            {
              "kind": "field",
              "name": "max"
            },
            {
              "kind": "field",
              "name": "textLabel"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-progressbar",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-progressbar",
          "declaration": {
            "name": "LFPProgressbar",
            "module": "dist/Progressbar.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Scrollmeter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPScrollMeter",
          "members": [
            {
              "kind": "method",
              "name": "#init",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-scrollmeter",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-scrollmeter",
          "declaration": {
            "name": "LFPScrollMeter",
            "module": "dist/Scrollmeter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Skeleton.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPSkeletext",
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-skeletext",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-skeletext",
          "declaration": {
            "name": "LFPSkeletext",
            "module": "dist/Skeleton.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Tablist.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPTablist",
          "members": [
            {
              "kind": "method",
              "name": "#setLinkedHeading",
              "privacy": "private",
              "parameters": [
                {
                  "name": "url"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "selected"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#createTabButton",
              "privacy": "private",
              "parameters": [
                {
                  "name": "description"
                },
                {
                  "name": "idx"
                },
                {
                  "name": "tabindex",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#toggleVisibility",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setAttributes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el"
                },
                {
                  "name": "items"
                }
              ]
            },
            {
              "kind": "field",
              "name": "orientation"
            },
            {
              "kind": "field",
              "name": "panels"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-tablist",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-tablist",
          "declaration": {
            "name": "LFPTablist",
            "module": "dist/Tablist.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/ToC.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPToC",
          "members": [
            {
              "kind": "method",
              "name": "#setupObserver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#createToC",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#collectHeadings",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "headings"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#createSelectorStr",
              "privacy": "private",
              "description": "Creates a valid selector string from a range of numbers to gather a\nNodeList of headings of the document.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "#createListElement",
              "privacy": "private",
              "parameters": [
                {
                  "name": "headings",
                  "description": "A NodeList of heading\nelements to be included in the table of content.",
                  "type": {
                    "text": "NodeListOf<HTMLHeadingElement>"
                  }
                },
                {
                  "name": "idx",
                  "description": "The starting point at which to enter the node list.",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Creates the content for the ToC by iterating recursively over all given headings",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "field",
              "name": "maxLevel"
            },
            {
              "kind": "field",
              "name": "minLevel"
            },
            {
              "kind": "field",
              "name": "headings"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-toc",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-toc",
          "declaration": {
            "name": "LFPToC",
            "module": "dist/ToC.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Toast.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPToast",
          "members": [
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#remove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "static": true,
              "parameters": [
                {
                  "name": "description",
                  "description": "Text to describe what the user is informed\nabout (keep it short!)",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "title",
                  "description": "An optional title for the toast.",
                  "type": {
                    "text": "string?"
                  }
                },
                {
                  "name": "dismissable",
                  "default": "false",
                  "description": "Toggle if the dismissable with a close button.",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Emits a signal that is catched by the toast component to give out a toast.\nKeep in mind, that in order to use this static method, you have to import\nthe base class for the toast component into your project."
            },
            {
              "kind": "field",
              "name": "animationDelay"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-toast",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-toast",
          "declaration": {
            "name": "LFPToast",
            "module": "dist/Toast.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/globals.d.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/index.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "LFPDisclosure",
          "members": [
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event",
                  "description": "The event object"
                }
              ],
              "description": "Handle click events"
            },
            {
              "kind": "field",
              "name": "trigger"
            },
            {
              "kind": "field",
              "name": "content"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-disclosure",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPNixieTube",
          "members": [
            {
              "kind": "field",
              "name": "#_",
              "privacy": "private",
              "static": true
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-nixie-tube",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPNumberInput",
          "members": [
            {
              "kind": "method",
              "name": "#createButton",
              "privacy": "private",
              "parameters": [
                {
                  "name": "text"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#clickAndHold",
              "privacy": "private",
              "parameters": [
                {
                  "name": "btnEl"
                },
                {
                  "name": "callback"
                }
              ]
            },
            {
              "kind": "field",
              "name": "input"
            },
            {
              "kind": "field",
              "name": "decrementButton"
            },
            {
              "kind": "field",
              "name": "incrementButton"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-numberinput",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPProgressbar",
          "members": [
            {
              "kind": "method",
              "name": "#setTextLabel",
              "privacy": "private",
              "parameters": [
                {
                  "name": "rel"
                },
                {
                  "name": "abs"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setValue",
              "parameters": [
                {
                  "name": "value",
                  "description": "The new value for the progressbar.",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "abs",
                  "default": "true",
                  "description": "Specify if the value passed should be handled\nin relation to the progressbar's maximum value or if value is just to be \nadded as is.",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Set a new value for the progressbar. Call this method periodically\nso that the progressbar is updated continuously."
            },
            {
              "kind": "method",
              "name": "update",
              "static": true,
              "parameters": [
                {
                  "name": "id",
                  "description": "The progressbar's unique ID",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "value",
                  "description": "The new value for the progressbar.",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Use this `static` method to update the progressbar's current value.\nAlternatively, use the `setValue` method on the component's instance itself."
            },
            {
              "kind": "field",
              "name": "showValue",
              "type": {
                "text": "boolean"
              },
              "default": "!!this.getAttribute(\"show-value\")"
            },
            {
              "kind": "field",
              "name": "notify",
              "type": {
                "text": "boolean"
              },
              "default": "!!this.getAttribute(\"aria-notify\")"
            },
            {
              "kind": "field",
              "name": "min"
            },
            {
              "kind": "field",
              "name": "max"
            },
            {
              "kind": "field",
              "name": "textLabel"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-progressbar",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPScrollMeter",
          "members": [
            {
              "kind": "method",
              "name": "#init",
              "privacy": "private"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-scrollmeter",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPSkeletext",
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-skeletext",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPTablist",
          "members": [
            {
              "kind": "method",
              "name": "#setLinkedHeading",
              "privacy": "private",
              "parameters": [
                {
                  "name": "url"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#setFocus",
              "privacy": "private",
              "parameters": [
                {
                  "name": "selected"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#createTabButton",
              "privacy": "private",
              "parameters": [
                {
                  "name": "description"
                },
                {
                  "name": "idx"
                },
                {
                  "name": "tabindex",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#toggleVisibility",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setAttributes",
              "privacy": "private",
              "parameters": [
                {
                  "name": "el"
                },
                {
                  "name": "items"
                }
              ]
            },
            {
              "kind": "field",
              "name": "orientation"
            },
            {
              "kind": "field",
              "name": "panels"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-tablist",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPToast",
          "members": [
            {
              "kind": "method",
              "name": "handleEvent",
              "parameters": [
                {
                  "name": "event"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#remove",
              "privacy": "private",
              "parameters": [
                {
                  "name": "element"
                }
              ]
            },
            {
              "kind": "method",
              "name": "emit",
              "static": true,
              "parameters": [
                {
                  "name": "description",
                  "description": "Text to describe what the user is informed\nabout (keep it short!)",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "title",
                  "description": "An optional title for the toast.",
                  "type": {
                    "text": "string?"
                  }
                },
                {
                  "name": "dismissable",
                  "default": "false",
                  "description": "Toggle if the dismissable with a close button.",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Emits a signal that is catched by the toast component to give out a toast.\nKeep in mind, that in order to use this static method, you have to import\nthe base class for the toast component into your project."
            },
            {
              "kind": "field",
              "name": "animationDelay"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-toast",
          "customElement": true
        },
        {
          "kind": "class",
          "description": "",
          "name": "LFPToC",
          "members": [
            {
              "kind": "method",
              "name": "#setupObserver",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#createToC",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#collectHeadings",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "#setId",
              "privacy": "private",
              "parameters": [
                {
                  "name": "headings"
                }
              ]
            },
            {
              "kind": "method",
              "name": "#createSelectorStr",
              "privacy": "private",
              "description": "Creates a valid selector string from a range of numbers to gather a\nNodeList of headings of the document.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "#createListElement",
              "privacy": "private",
              "parameters": [
                {
                  "name": "headings",
                  "description": "A NodeList of heading\nelements to be included in the table of content.",
                  "type": {
                    "text": "NodeListOf<HTMLHeadingElement>"
                  }
                },
                {
                  "name": "idx",
                  "description": "The starting point at which to enter the node list.",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Creates the content for the ToC by iterating recursively over all given headings",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "field",
              "name": "maxLevel"
            },
            {
              "kind": "field",
              "name": "minLevel"
            },
            {
              "kind": "field",
              "name": "headings"
            }
          ],
          "superclass": {
            "name": "HTMLElement"
          },
          "tagName": "lfp-toc",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "lfp-disclosure",
          "declaration": {
            "name": "LFPDisclosure",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-nixie-tube",
          "declaration": {
            "name": "LFPNixieTube",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-numberinput",
          "declaration": {
            "name": "LFPNumberInput",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-progressbar",
          "declaration": {
            "name": "LFPProgressbar",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-scrollmeter",
          "declaration": {
            "name": "LFPScrollMeter",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-skeletext",
          "declaration": {
            "name": "LFPSkeletext",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-tablist",
          "declaration": {
            "name": "LFPTablist",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-toast",
          "declaration": {
            "name": "LFPToast",
            "module": "dist/index.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "lfp-toc",
          "declaration": {
            "name": "LFPToC",
            "module": "dist/index.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/utilities.js",
      "declarations": [],
      "exports": []
    }
  ]
}
